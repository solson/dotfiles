#!/bin/sh

abort() {
  echo >&2 "$@"
  exit 1
}

if [ $# -eq 1 ]; then
  filename="$1"
else
  abort "USAGE: vigpg [filename.asc]"
fi

filename_without_asc="$(basename "$filename" .asc)"
extension="${filename_without_asc##*.}"

tmp="$(mktemp --suffix=".$extension")" || exit 1

if [ ! -f "$filename" ]; then
  echo "$filename doesn't exist. Starting from empty file."
elif [ ! -r "$filename" ]; then
  abort "$filename isn't readable."
fi

# Decrypt into the tmp file.
if [ -f "$filename" ]; then
  if ! gpg --decrypt --armor --quiet --batch "$filename" > "$tmp"; then
    shred -u "$tmp"
    abort "GPG decryption failed."
  fi

  # If the encrypted file is unwritable, make the unencrypted temporary file
  # unwritable, too.
  if [ ! -w "$filename" ]; then
    chmod -w "$tmp"
    echo "$filename isn't writable, so any modifications will be discarded."
  fi
fi

# -n is for noswap and -i NONE is for no .viminfo
vim -n -i NONE "$tmp"

# Write changes back out.
if [ -e "$filename" -a ! -w "$filename" ]; then
  # The original file is unwritable, and can't be updated.
  chmod +w "$tmp"
  shred -u "$tmp"
else
  gpg --encrypt --armor --quiet --batch --yes \
    --recipient tsion@keybase.io --trust-mode always \
    --output "$filename" "$tmp"
  status=$?

  shred -u "$tmp"

  if [ $status != 0 ]; then
    abort "GPG encryption failed."
  fi
fi
